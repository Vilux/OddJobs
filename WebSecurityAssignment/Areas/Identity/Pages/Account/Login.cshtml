@page
@model LoginModel

@{
    ViewData["Title"] = "Log in";
}

<h2>@ViewData["Title"]</h2>
<div class="row">
    <div class="col-md-4">
        <section>
            <form method="post">
                <h4>Use a local account to log in.</h4>
                <hr />
                <div asp-validation-summary="All" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Input.Email"></label>
                    <input asp-for="Input.Email" class="form-control" />
                    <span asp-validation-for="Input.Email" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Input.Password"></label>
                    <input asp-for="Input.Password" class="form-control" />
                    <span asp-validation-for="Input.Password" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <div class="checkbox">
                        <label asp-for="Input.RememberMe">
                            <input asp-for="Input.RememberMe" />
                            @Html.DisplayNameFor(m => m.Input.RememberMe)
                        </label>
                    </div>
                </div>

                <div class="form-group">
                    <div id="ReCaptchContainer"></div>
                    <br /><label id="lblMessage"></label><br />
                    <button type="submit" class="btn btn-default">Log in</button>
                </div>               
                <div class="form-group">


                    <p>
                        <a asp-page="./ForgotPassword">Forgot your password?</a>
                    </p>
                    <p>
                        <a asp-page="./Register" asp-route-returnUrl="@Model.ReturnUrl">Register as a new user</a>
                    </p>
                </div>
            </form>
        </section>
    </div>
    <div class="col-md-6 col-md-offset-2">
        <section>
            <h4>Use another service to log in.</h4>
            <hr />
            @{
                if ((Model.ExternalLogins?.Count ?? 0) == 0)
                {
                    <div>
                        <p>
                            There are no external authentication services configured. See <a href="https://go.microsoft.com/fwlink/?LinkID=532715">this article</a>
                            for details on setting up this ASP.NET application to support logging in via external services.
                        </p>
                    </div>
                }
                else
                {
                    <form asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                        <div>
                            <p>
                                @foreach (var provider in Model.ExternalLogins)
                                {
                                    <button type="submit" class="btn btn-default" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                                }
                            </p>
                        </div>
                    </form>
                }
            }
        </section>
    </div>
</div>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}

<!--Load reCaptcha API-->
<script src="https://www.google.com/recaptcha/api.js?onload=renderRecaptcha&render=explicit"
        async defer>
</script>
<script src="https://code.jquery.com/jquery-3.2.1.min.js"></script>

<script type="text/javascript">
    // Style and draw reCAPTCHA.
    var renderRecaptcha = function () {
        grecaptcha.render('ReCaptchContainer', {
            'sitekey':  '@ViewData["SiteKey"]',
            'callback': reCaptchaCallback,
            theme:      'light',    //light or dark
            type:       'image',    // image or audio
            size:       'normal'    //normal or compact
        });
    };

    var reCaptchaCallback = function (response) {
        // If reCAPTCHA is successful display it.
        if (response !== '') {
            jQuery('#lblMessage').css('color', 'green').html('Success');
            $(':input[type="submit"]').prop('disabled', false);
        }
    };

    // Check reCAPTCHA validation.
    jQuery('button[type="button"]').click(function (e) {
        var message = 'Please checck the checkbox';
        if (typeof (grecaptcha) != 'undefined') {
            var response = grecaptcha.getResponse();
            (response.length === 0) ? (message = 'Captcha verification failed')
                                    : (message = 'Success!');
        }
        jQuery('#lblMessage').html(message);
        jQuery('#lblMessage').css('color',
                              (message.toLowerCase() == 'success!') ? "green" : "red");
    });

    // Disable button when form loads.
    $(document).ready(function () {
        $(':input[type="submit"]').prop('disabled', true);
    });

</script>

